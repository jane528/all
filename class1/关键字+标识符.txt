
关键字的特点：
	1.完全小写的字母  
	2.在编辑器中有特殊颜色
	
标识符：
	组成：大小写字母、数字、美元符号、下划线
	      不能以数字开头
		  不能是关键字
	命名规范：
	      类名规范：首字母大写、后面每个单词首字母大写--大驼峰式 HelloWorld
		  变量名规范：首字母小写、后面每个单词首字母大写--小驼峰式  isTrue
		  方法名规范：同变量名规范

常量：
	在程序运行期间，固定不变的量
	分类：
		字符串常量“Hello World”
		整形常量:100、200
		浮点数常量：100.23
		字符常量：‘A’、‘B’
		布尔常量：true、false
		空常量：null（没有任何数据）
基本数据类型：
	整数型（byte、short、Int、long）、浮点型（float、double）、字符（char）、布尔型（boolean）
	字符串不是基本数据类型，而是引用类型
	浮点型可能是近似值，不是精确值
	浮点数当中默认类型是double,如果一定要使用float类型，需要加上一个后缀F
	如果是整数，默认为int类型，如果一定使用long类型，需要加上一个后缀L，建议使用大写字母
	
变量：
	数据类型 变量名;
	变量名 = 数据值;
	
	数据类型 变量名 = 数据值;

变量注意事项：
	如果创建多个变量，那么变量之间的名称不可重复
	在使用byte和short类型的变量，要在数据范围之内
	变量没有赋值不能使用
	变量使用不能超过作用域的范围
	作用域：从定义变量的一行开始，一直到直接所属的大括号结束为止
	可以通过一个语句创建多个变量

数据类型转换：
	当数据类型不一致时，发生数据类型转换：自动类型转换、强制类型转换
	自动类型转换：数据范围从小到大（byte-->short-->int-->long-->float-->double）
	强制类型转换：一般不推荐使用，可能发生精度损失、数据溢出
	规则：范围小的类型 变量名 = （范围小的类型）原本范围大的数据：

方法名称规则：小驼峰
	public static void 方法名称（参数类型 参数名）{
	 方法体
	}
	1.方法定义的先后顺序无所谓
	2.方法的定义不能产生嵌套包含关系，方法里面不能包含方法
	3.定义方法后不会执行，如果执行需要调用执行
	4.调用方法格式：方法名称（）;